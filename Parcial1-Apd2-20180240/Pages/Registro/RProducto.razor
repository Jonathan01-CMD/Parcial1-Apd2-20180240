@page "/RProducto"

@inject IToastService toast



<EditForm Model="Producto" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class=" card">
        <div class=" card-header">
            <h3>Registro de Producto</h3>
        </div>
        <div class=" card-body">
            <form>
                @*Productos ID*@
                <div class=" form-row align-items-center">
                    <div class=" col">
                        <label>ProductoId</label>
                        <div class=" input-group">
                            <InputNumber @bind-Value="Producto.ProductoId" class="form-control col-4" />
                            <div class=" input-group-append">
                                <button type="button" class=" btn btn-primary input-group-text" @onclick=" Buscar">
                                    <i class=" oi oi-magnifying-glass mr-2" /> Buscar
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                @*Descripsion*@
                <div class="form-group">
                    <label>Descripsión</label>
                    <InputText @bind-Value=" Producto.Descripsion" class=" form-control" />
                    <ValidationMessage For="@(() => Producto.Descripsion)" />
                </div>
                @*Existencia*@
                <div class="form-group">
                    <label>Existencia</label>
                    <InputNumber @bind-Value=" Producto.Existencia" class=" form-control" />
                    <ValidationMessage For="@(() => Producto.Descripsion)" />
                </div>
                @*Costo*@
                <div class="form-group">
                    <label>Costo</label>
                    <InputNumber @bind-Value=" Producto.Costo" class=" form-control" />
                    <ValidationMessage For="@(() => Producto.Costo)" />
                </div>
                @*valor Inventario*@
                <div class="form-group">
                    <label>Valor Inventario</label>
                    <InputNumber @bind-Value=" Producto.Inventario" class=" form-control" readOnly =" true"/>
                </div>
            </form>
        </div>
        <div class=" card-footer">
            <div class=" form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                    <i class=" oi oi-file mr-2" /> Nuevo
                </button>
                <button type="submit" class="btn btn-lg btn-success" @onclick="Guardar">
                    <i class=" oi oi-account-login" style="transform:rotate(90deg)"/> Guardar
                </button>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Eliminar">
                    <i class=" oi oi-file mr-2" /> Eliminar
                </button>
            </div>
        </div>
    </div>
</EditForm>


@code {
    [Parameter]
    public int ProductoId { get; set; }
    public Productos Producto = new Productos();

    protected override void OnInitialized()
    {
        Nuevo();

        Buscar();
    }

    public void Nuevo()
    {
        Producto = new Productos();

    }
    private void Buscar()
    {
        if (Producto.ProductoId > 0)
        {
            var encontrado = ProductosBLL.Buscar(Producto.ProductoId);

            if (encontrado != null)
                this.Producto = encontrado;
            else
                toast.ShowWarning("No encontrado");
        }
    }
    public void Guardar()
    {
        bool guardo;

        guardo = ProductosBLL.Guardar(Producto);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado exitoso");
        }
        else
        {
            toast.ShowError("No fue posible realisar el Guardado");
        }
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = ProductosBLL.Eliminar(Producto.ProductoId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado Correctamente");
        }
        else
            toast.ShowError("No fue posible realisar la Eliminacíon");

    }
}